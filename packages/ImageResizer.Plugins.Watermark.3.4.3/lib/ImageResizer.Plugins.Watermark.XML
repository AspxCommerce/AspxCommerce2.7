<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImageResizer.Plugins.Watermark</name>
    </assembly>
    <members>
        <member name="P:ImageResizer.Plugins.Watermark.DistanceUnit.Value">
            <summary>
            A number of pixels, or a percentage value between 0 and 100
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.Watermark.Layer.CalculateLayerCoordinates(ImageResizer.Resizing.ImageState,ImageResizer.Plugins.Watermark.Layer.CalculateLayerContentSize,System.Boolean)">
            <summary>
            Returns a rectangle with canvas-relative coordinates. A callback is required to calculate the actual size of the content based on the specified bounds. 
            The callback may be passed double.NaN for one or more paramters to indicate that they are not specified.
            
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Top">
            <summary>
            The offset from the top of the container. Percentages are relative to the container height. Defines the upper boundary for the layer. 
            If null, Bottom will be used to calcuate the value based on the height. If Bottom is not specified, defaults to 0.
            Positive values are inside the container, negative values outside it.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Left">
            <summary>
            The offset from the left of the container. Percentages are relative to the container width. Defines the leftmost boundary for the layer. 
            If null, Right will be used to calcuate the value based on the width. If Right is not specified, defaults to 0.
            Positive values are inside the container, negative values outside it.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Right">
            <summary>
            The offset relative to the right side of the container. Percentages are relative to the container width. Defines the rightmost boundary for the layer.
            If null, Top will be used to calcuate the value based on the height. If Top is not specified, defaults to 0.
            Positive values are inside the container, negative values outside it.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Bottom">
            <summary>
            The offset relative to the bottom of the container. Percentages are relative to the container height. Defines the bottom-most boundary for the layer.
            If null, Top will be used to calcuate the value based on the height. If Top is not specified, defaults to 0.
            Positive values are inside the container, negative values outside it.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Width">
            <summary>
            The width of the layer. If used with both Left and Right, the smaller result wins. I.e, with a 100px container, width=50, left=30, right=30, the resulting width will be 40.
            If null, Left and Right will be used to calcuate the value. If both Left and Right are not specified, the natural width of the layer's contents will be used.
            Percentages are relative to the container width. 
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Height">
            <summary>
            The height of the layer. If used with both Top and Bottom, the smaller result wins. I.e, with a 100px container, height=50, top=30, top=30, the resulting height will be 40.
            If null, Top and Bottom will be used to calcuate the value. If both Top and Bottom are not specified, the natural height of the layer's contents will be used.
            Percentages are relative to the container height. 
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.RelativeTo">
            <summary>
            Specifies the container that the position values (top,left,right,bottom,width,heght) are relative to. 
            The default is 'image' (the innermost square, which contains the original photo). Additional valid values include 'imageArea' (includes whitespace added to preserve aspect ratio), 'padding', 'border', 'margin', and 'canvas'. 
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.Layer.Align">
            <summary>
            The alignment to use when 
            (a) all 3 horizontal or vertical values are specified, and they need to be resolved,
            (b) when only width/height are specified, 
            (c) when no positioning values are specified, or 
            (d) when the content doesn't precisely fill they layer bounds.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ImageResizer.Plugins.Watermark.Layer.Fill" -->
        <member name="P:ImageResizer.Plugins.Watermark.Layer.DrawAs">
            <summary>
            The z-order at which to draw the layer. Curret options are Overlay (over everything) and Background (over the background color).
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.Watermark.ImageLayer.GetMemCachedBitmap(System.String,ImageResizer.ResizeSettings,System.Boolean)">
            <summary>
            Loads or caches a bitmap, using asp.net's cache (when available)
            </summary>
            <param name="query"></param>
            <param name="virtualPath"></param>
            <param name="onlyLoadIfCacheExists">Whether to load the image when
            no cache is available.  Pass <c>true</c> for pre-fetching, and
            <c>false</c> if the image is needed immediately.</param>
            <returns>Returns the Bitmap.  If no cache is available, and
            <c>onlyLoadIfCacheExists</c> is <c>true</c>, returns <c>null</c>
            rather than loading the Bitmap.</returns>
        </member>
        <member name="M:ImageResizer.Plugins.Watermark.ImageLayer.ShouldLoadAsOriginalSize">
            <summary>
            Whether the image should be loaded in its original size.  If it can,
            it can also be pre-fetched.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.ImageLayer.Path">
            <summary>
            The virtual path to the watermark image
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.ImageLayer.ImageQuery">
            <summary>
            Settings to apply to the watermark before overlaying it on the image. 
            </summary>
        </member>
        <member name="T:ImageResizer.Plugins.Watermark.LegacyWatermarkFeatures">
            <summary>
            Provides extensibility points for drawing watermarks and even modifying resizing/image settings
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.Watermark.LegacyWatermarkFeatures.GetMemCachedBitmap(System.String,System.Boolean)">
            <summary>
            Loads or caches a bitmap, using asp.net's cache (when available)
            </summary>
            <param name="virtualPath">The virtual path to the file to load.</param>
            <param name="onlyLoadIfCacheExists">Whether to load the image when
            no cache is available.  Pass <c>true</c> for pre-fetching, and
            <c>false</c> if the image is needed immediately.</param>
            <returns>Returns the Bitmap.  If no cache is available, and
            <c>onlyLoadIfCacheExists</c> is <c>true</c>, returns <c>null</c>
            rather than loading the Bitmap.</returns>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.Text">
            <summary>
            The text to display
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.Vertical">
            <summary>
            If true, text will be displayed vertically
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.Angle">
            <summary>
            Angle of clockwise rotation
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.TextColor">
            <summary>
            The color to draw the text
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.OutlineWidth">
            <summary>
            The width of the text ouline (OutlineColor)
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.GlowWidth">
            <summary>
            The width of the glow effect (GlowColor)
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.OutlineColor">
            <summary>
            The color of the outline
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.GlowColor">
            <summary>
            The color of the glow effect. 
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.Font">
            <summary>
            The name of the font
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.FontSize">
            <summary>
            The size of the font in pixels
            </summary>  
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.TextLayer.Style">
            <summary>
            The font style
            </summary>
        </member>
        <member name="T:ImageResizer.Plugins.Watermark.WatermarkPlugin">
            <summary>
            Provides extensibility points for drawing watermarks and even modifying resizing/image settings
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.Watermark.WatermarkPlugin.CreateLayerFromOtherImages(System.String)">
            <summary>
            Creates an ImageLayer for the watermark based on OtherImages, if
            it exists.  If OtherImages does not exist, the watermark should be
            treated as a legacy one.
            </summary>
            <param name="watermarkPath">The path to the watermark image.</param>
            <returns>Returns a copy of OtherImages, modified to represent the
            watermark passed in <c>watermarkPath</c>, or <c>null</c> if
            OtherImages doesn't exist.</returns>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.WatermarkPlugin.DefaultImageQuery">
            <summary>
            Default querystring parameters for all image watermarks.
            If not specified in the watermark configuration, defaults to
            "scache=true".
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.WatermarkPlugin.OtherImages">
            <summary>
            When a &amp;watermark command does not specify a named preset, it is assumed to be a file name. 
            Set OtherImages.Path to the search folder. All watermark images (except for presets) must be in the root of the search folder. 
            The remainder of the settings affect how each watermark will be positioned and displayed.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.Watermark.WatermarkPlugin.NamedWatermarks">
            <summary>
            This dictionary contains watermarks keyed by name. Values are enumerations of layers - a watermark can have multiple layers.
            </summary>
        </member>
    </members>
</doc>
